{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","TodoForm","validTodos","setValidTodos","useState","setTitle","titleError","setTitleError","setUserId","userError","setUserError","onSubmit","event","preventDefault","newTodo","Math","max","el","type","placeholder","value","onChange","target","disabled","users","App","todosFromServer","usersFromServer","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.854942e9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../Types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n  </article>\n);\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../Types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport { ServerTodo } from '../../Types/ServerTodo';\nimport users from '../../api/users';\n\ntype Props = {\n  setValidTodos: (todos: ServerTodo[]) => void;\n  validTodos: ServerTodo[];\n};\n\nexport const TodoForm: React.FC<Props> = ({ validTodos, setValidTodos }) => {\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(event.target.value);\n    setTitleError(false);\n  }\n\n  function handleUserChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserId(+event.target.value);\n    setUserError(false);\n  }\n\n  function handleSubmit(event:React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...validTodos.map(el => el.id)) + 1,\n      title,\n      userId,\n      completed: false,\n    };\n\n    setValidTodos([...validTodos, newTodo]);\n    setTitle('');\n    setUserId(0);\n  }\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        {titleError && <span className=\"error\">Please enter a title</span>}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {userError && <span className=\"error\">Please choose a user</span>}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './Types/Todo';\nimport { ServerTodo } from './Types/ServerTodo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const App: React.FC = () => {\n  const [\n    validTodos,\n    setValidTodos,\n  ] = useState<ServerTodo[]>([...todosFromServer]);\n\n  const todos: Todo[] = validTodos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm setValidTodos={setValidTodos} validTodos={validTodos} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}